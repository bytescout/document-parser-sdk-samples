---
# Template that demonstrates parsing of tables with complex multi-line rows.
# See "ComplexTableRows.pdf" sample document.
templateVersion: 3
templatePriority: 0
sourceId: Complex Table Rows Test
detectionRules:
  keywords:
  - North America Customer Loss Runs
  - Policy Year

# Standalone fields
fields:
  policyYear:
    expression: 'Policy Year:{{Spaces}}{{4Digits}}'
    dataType: integer
  coverageTotals:
    expression: 'Coverage Totals:{{Spaces}}{{Dollar}}({{Number}})'
    dataType: decimal

# Template-level macros
templateMacros:
  # Expressions for columns:
  # `(?<name>)` construction is a named group which value will go to result as table column.
  ClaimNumber: '(?<ClaimNumber>{{10Digits}})' # Expression for Claim Number column. 10 digits.
  Claimant: '(?<Claimant>{{SentenceWithSingleSpaces}})' # Expression for Claimant column. Few words.
  LossType: '(?<LossType>{{SentenceWithSingleSpaces}})' # Expression for LossType column. Few words.
  LossDate: '(?<LossDate>{{SmartDate}})' # Expression for Loss Date column.
  Status: '(?<Status>Open|Closed)' # Expression for Status column. Literally "Open" or "Closed" words.
  ReportedDate: '(?<ReportedDate>{{SmartDate}})' # Expression for Reported Date column.
  ClosedDate: '(?<ClosedDate>{{SmartDate}})' # Expression for Closed Date column.
  Reserve: '{{Dollar}}(?<Reserve>{{Number}})' # Expression for Reserver column. Number.
  ExpPaid: '{{Dollar}}(?<ExpPaid>{{Number}})' # Expression for Exp Paid column. Number.
  TotalPaid: '{{Dollar}}(?<TotalPaid>{{Number}})' # Expression for Total Paid column. Number.
tables:
- name: table1
  start:
    # Table start on each page after "Exp Paid    Total Paid" phrase in table headers
    expression: 'Exp Paid{{Spaces}}Total Paid'
  end:
    # Table ends on each page before "Coverage Totals:" phrase
    expression: 'Coverage Totals:'
  subItemStart:
    # Table sub-item (complex multi-line row) starts at the beginning of the line containing the cell of "Claim #" column
    expression: '({{LineStart}}){{Spaces}}{{10Digits}}'
  subItemEnd:
    # Table sub-item ends at the end of the line containing "Description:" phrase
    expression: 'Description:{{Spaces}}{{SentenceWithSingleSpaces}}{{Spaces}}({{LineEnd}})'
  row:
    # Macro expression to parse table rows
    expression: '{{LineStart}}{{Spaces}}<<ClaimNumber>>{{Spaces}}<<Claimant>>{{Spaces}}<<LossType>>{{Spaces}}<<LossDate>>{{Spaces}}<<Status>>{{Spaces}}<<ReportedDate>>{{Spaces}}<<ClosedDate>>{{Spaces}}<<Reserve>>{{Spaces}}<<ExpPaid>>{{Spaces}}<<TotalPaid>>'
    # Additional expression to parse hanging parts of "Claimant" and "Loss Type" columns. This parts will be merged with the data from the main expression.
    # `?` after <<LossType>> means that this cell may be missing.
    subExpression1: '{{LineStart}}{{Space}}{20,}<<Claimant>>{{Spaces}}<<LossType>>?'
  # Output data types for columns
  columns: 
  - name: ClaimNumber
    type: string
  - name: Claimant
    type: string
  - name: LossType
    type: string
  - name: LossDate
    type: date
    dateFormat: auto-MDY
  - name: Status
    type: string
  - name: ReportedDate
    type: date
    dateFormat: auto-MDY
  - name: ClosedDate
    type: date
    dateFormat: auto-MDY
  - name: Reserve
    type: decimal
  - name: ExpPaid
    type: decimal
  - name: TotalPaid
    type: decimal
  multipage: true